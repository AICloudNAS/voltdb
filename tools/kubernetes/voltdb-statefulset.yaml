apiVersion: v1
kind: Service
metadata:
  name: --clusterName--
  labels:
    app: --clusterName--
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
  - port: 8080
    name: vmc
  clusterIP: None
  selector:
    app: --clusterName--
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: --clusterName--
spec:
  selector:
    matchLabels:
      app: --clusterName--
  serviceName: "--clusterName--"
  replicas: --replicaCount--
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: --clusterName--
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - --clusterName--
              topologyKey: kubernetes.io/hostname
      # nb. use voltadmin shutdown command to ensure the database process exits b4 k8s kills the pods
      terminationGracePeriodSeconds: 30
      containers:
      - name: --clusterName--
        image: --containerImage---
        imagePullPolicy: Always
        ports:
        - containerPort: 3021
          name: intra-node
        - containerPort: 3022
          name: tls-intra-node
        - containerPort: 21211
          name: external-admin
        - containerPort: 21212
          name: external-client
        - containerPort: 5555
          name: replication
        - containerPort: 8080
          name: vmc
        resources:
          requests:
           cpu: --cpuCount--
           memory: --memorySize--
        # For liveness/readiness checks, if security is enabled, provide userid/password, see https://docs.voltdb.com/UsingVoltDB/ProgLangJson.php
        # For liveness probes, set the initialDelay to ensure the probe is not issued until all the pods are initialized, otherwise
        # k8s will restart your pod(s) during initialization. The time will vary with the number of nodes and your k8s system load.
#        livenessProbe:
#          tcpSocket:
#            port: intra-node
#          initialDelaySeconds: 60
#          periodSeconds: 60
        # The sample readinessProbe is in the voltdb kit in tools/kubernetes/bin, configure it to your requirements.
#        readinessProbe:
#          exec:
#            command:
#            - k8sreadycheck.py
#          initialDelaySeconds: 60
#          periodSeconds: 60
#          failureThreshold: 3
        env:
#         Specify 'voltdb start ...' command line args (space separated list)
#         IMPORTANT!!!! VoltDB requires linux kernel feature Transparent Huge Pages (THP) be DISABLED when running VoltDB in PRODUCTION.
#         Uncomment next 2 lines to ignore THP settings on non-production systems.
#          - name: VOLTDB_START_ARGS
#            value: "--ignore=thp"
#          - name: VOLTDB_HEAPMAX
#            value: "3072"
#          - name: VOLTDB_OPTS
#            value: ""
#          - name: JAVA_OPTS
#            value: ""
#       Persistent volume mounts
#       Configuring for maximum performance often requires multiple local disk or ssd, particularly for commmand log and snapshots
#       See our performance guide https://docs.voltdb.com/PerfGuide/
#       Warning: localdisk provisioning is beta in k8s V1.10, support may be limited.
        volumeMounts:
        - name: voltdbroot
          mountPath: /voltdbroot
#        - name: commandlog
#          mountPath: /commandlog
#        - name: commandlogsnapshot
#          mountPath: /commandlogsnapshot
#        - name: exportoverflow
#          mountPath: /exportoverflow
#        - name: snapshots
#          mountPath: /snapshots
  volumeClaimTemplates:
  - metadata:
      name: voltdbroot
    spec:
      #storageClassName:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: --pvolumeSize--
